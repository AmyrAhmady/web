"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[67650],{17484:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"scripting/callbacks/OnClientMessage","title":"OnClientMessage","description":"Dieses Callback wird ausgef\xfchrt wenn ein NPC eine ClientMessage erkennt.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/scripting/callbacks/OnClientMessage.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnClientMessage","permalink":"/de/docs/scripting/callbacks/OnClientMessage","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/callbacks/OnClientMessage.md","tags":[],"version":"current","frontMatter":{"title":"OnClientMessage","sidebar_label":"OnClientMessage","description":"Dieses Callback wird ausgef\xfchrt wenn ein NPC eine ClientMessage erkennt.","tags":[]},"sidebar":"docsSidebar","previous":{"title":"OnClientCheckResponse","permalink":"/de/docs/scripting/callbacks/OnClientCheckResponse"},"next":{"title":"OnDialogResponse","permalink":"/de/docs/scripting/callbacks/OnDialogResponse"}}');var i=s(74848),r=s(28453);const l={title:"OnClientMessage",sidebar_label:"OnClientMessage",description:"Dieses Callback wird ausgef\xfchrt wenn ein NPC eine ClientMessage erkennt.",tags:[]},a=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"R\xfcckgabe(return value)",id:"r\xfcckgabereturn-value",level:2},{value:"Beispiele",id:"beispiele",level:2}];function o(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["Dieses Callback wird ausgef\xfchrt wenn ein NPC eine ClientMessage erkennt. Er erkennt die ClientMessage bei Benutzung von SendClientMessageToAll oder wenn SendClientMessage direkt an den NPC gesendet wird.function is used and everytime a SendClientMessage function is sent towards the NPC. ACHTUNG: Das Callback wird nicht ausgef\xfchrt, wenn jemand in den Chat schreibt. F\xfcr eine Version mit Spieler Text, siehe NPC",":OnPlayerText","."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"color"}),(0,i.jsx)(n.td,{children:"The color the ClientMessage is."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"text[]"}),(0,i.jsx)(n.td,{children:"The actual message."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"r\xfcckgabereturn-value",children:"R\xfcckgabe(return value)"}),"\n",(0,i.jsx)(n.p,{children:"Dieses Callback hat keinen R\xfcckgabewert."}),"\n",(0,i.jsx)(n.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'public OnClientMessage(color, text[])\n{\n    if (strfind(text,"Kontostand: $0")\xa0!= -1)\n    {\n        SendClientMessage(playerid, -1, "Ich bin arm\xa0:(");\n    }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);