"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[63216],{23591:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"scripting/callbacks/OnPlayerConnect","title":"OnPlayerConnect","description":"Descripci\xf3n","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerConnect.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerConnect","permalink":"/es/docs/scripting/callbacks/OnPlayerConnect","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/callbacks/OnPlayerConnect.md","tags":[{"inline":true,"label":"player","permalink":"/es/docs/tags/player"}],"version":"current","frontMatter":{"t\xedtulo":"OnPlayerConnect","descripci\xf3n":"Este callback se llama cuando un jugador se conecta al servidor.","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerCommandText","permalink":"/es/docs/scripting/callbacks/OnPlayerCommandText"},"next":{"title":"OnPlayerDeath","permalink":"/es/docs/scripting/callbacks/OnPlayerDeath"}}');var t=s(74848),c=s(28453);const l={"t\xedtulo":"OnPlayerConnect","descripci\xf3n":"Este callback se llama cuando un jugador se conecta al servidor.",tags:["player"]},a=void 0,i={},o=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Devoluciones",id:"devoluciones",level:2},{value:"Ejemplos",id:"ejemplos",level:2},{value:"Notas",id:"notas",level:2},{value:"Funciones Relacionadas",id:"funciones-relacionadas",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components},{TipNPCCallbacksES:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("TipNPCCallbacksES",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,t.jsx)(n.p,{children:"Este callback se llama cuando un jugador se conecta al servidor."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Nombre"}),(0,t.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"playerid"}),(0,t.jsx)(n.td,{children:"El ID del jugador que se conect\xf3."})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"devoluciones",children:"Devoluciones"}),"\n",(0,t.jsx)(n.p,{children:"1 - Prevendr\xe1 a otros filterscripts de recibir este callback."}),"\n",(0,t.jsx)(n.p,{children:"0 - Indica que este callback ser\xe1 pasado al siguiente filterscript."}),"\n",(0,t.jsx)(n.p,{children:"Siempre se llama primero en filterscripts."}),"\n",(0,t.jsx)(n.h2,{id:"ejemplos",children:"Ejemplos"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'public OnPlayerConnect(playerid)\n{\n    new\n        string[64],\n        playerName[MAX_PLAYER_NAME];\n\n    GetPlayerName(playerid, playerName, MAX_PLAYER_NAME);\n    format(string, sizeof string, "%s ingres\xf3 al servidor. Bienvenido!", playerName);\n    SendClientMessageToAll(0xFFFFFFAA, string);\n    return 1;\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"notas",children:"Notas"}),"\n",(0,t.jsx)(s,{}),"\n",(0,t.jsx)(n.h2,{id:"funciones-relacionadas",children:"Funciones Relacionadas"})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(96540);const t={},c=r.createContext(t);function l(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);