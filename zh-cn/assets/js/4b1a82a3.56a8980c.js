"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[63857],{28453:(t,e,s)=>{s.d(e,{R:()=>c,x:()=>d});var r=s(96540);const n={},i=r.createContext(n);function c(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:c(t.components),r.createElement(i.Provider,{value:e},t.children)}},69518:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"scripting/resources/startingids","title":"Starting IDs","description":"Everything like objects, players or vehicles use IDs. Some IDs start with 0, others start with 1.","source":"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/scripting/resources/startingids.md","sourceDirName":"scripting/resources","slug":"/scripting/resources/startingids","permalink":"/zh-cn/docs/scripting/resources/startingids","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/resources/startingids.md","tags":[],"version":"current","frontMatter":{"title":"Starting IDs","sidebar_label":"Starting IDs","description":"Everything like objects, players or vehicles use IDs. Some IDs start with 0, others start with 1."},"sidebar":"docsSidebar","previous":{"title":"Scripting Basics","permalink":"/zh-cn/docs/scripting/resources/start"},"next":{"title":"Svar Types","permalink":"/zh-cn/docs/scripting/resources/svartypes"}}');var n=s(74848),i=s(28453);const c={title:"Starting IDs",sidebar_label:"Starting IDs",description:"Everything like objects, players or vehicles use IDs. Some IDs start with 0, others start with 1."},d=void 0,l={},o=[];function a(t){const e={br:"br",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["This page contains all of the starting IDs for numerous entities.",(0,n.jsx)(e.br,{}),"\n","Everything like objects, players or vehicles use IDs. Some IDs start with 0, others start with 1."]}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Type"}),(0,n.jsx)(e.th,{children:"Starting ID"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"3D Text Label"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Actor"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"File"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"GangZone"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Object"}),(0,n.jsx)(e.td,{children:"1"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Pickup"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Player"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Player Class"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"TextDraw / PlayerTextDraw"}),(0,n.jsx)(e.td,{children:"0"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Timer"}),(0,n.jsx)(e.td,{children:"1"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Vehicle"}),(0,n.jsx)(e.td,{children:"1"})]})]})]}),"\n",(0,n.jsx)(e.p,{children:"You see, vehicles and objects start using 1, not 0! So if you plan to use an array to hold all IDs you have to use the ID from CreateObject/CreateVehicle/... and subtract 1 to get the array element ID."})]})}function h(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(a,{...t})}):a(t)}}}]);