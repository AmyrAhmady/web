"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[20794],{28453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>c});var l=n(96540);const t={},r=l.createContext(t);function a(e){const i=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),l.createElement(r.Provider,{value:i},e.children)}},56480:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>o,frontMatter:()=>a,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"scripting/callbacks/OnTrailerUpdate","title":"OnTrailerUpdate","description":"This callback is called when a player sent a trailer update.","source":"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/scripting/callbacks/OnTrailerUpdate.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnTrailerUpdate","permalink":"/zh-cn/docs/scripting/callbacks/OnTrailerUpdate","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/callbacks/OnTrailerUpdate.md","tags":[{"inline":true,"label":"vehicle","permalink":"/zh-cn/docs/tags/vehicle"}],"version":"current","frontMatter":{"title":"OnTrailerUpdate","sidebar_label":"OnTrailerUpdate","description":"This callback is called when a player sent a trailer update.","tags":["vehicle"]},"sidebar":"docsSidebar","previous":{"title":"OnScriptUnloadPlayer","permalink":"/zh-cn/docs/scripting/callbacks/OnScriptUnloadPlayer"},"next":{"title":"OnUnoccupiedVehicleUpdate","permalink":"/zh-cn/docs/scripting/callbacks/OnUnoccupiedVehicleUpdate"}}');var t=n(74848),r=n(28453);const a={title:"OnTrailerUpdate",sidebar_label:"OnTrailerUpdate",description:"This callback is called when a player sent a trailer update.",tags:["vehicle"]},c=void 0,s={},d=[{value:"Description",id:"description",level:2},{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2},{value:"Notes",id:"notes",level:2},{value:"Related Functions",id:"related-functions",level:2},{value:"Related Functions",id:"related-functions-1",level:2}];function h(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(i.p,{children:"This callback is called when a player sent a trailer update."}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Name"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"playerid"}),(0,t.jsx)(i.td,{children:"The ID of the player who sent a trailer update"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"vehicleid"}),(0,t.jsx)(i.td,{children:"The Trailer being updated"})]})]})]}),"\n",(0,t.jsx)(i.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(i.p,{children:"0 - Cancels any trailer updates from being sent to other players. Update is still sent to the updating player."}),"\n",(0,t.jsx)(i.p,{children:"1 - Processes the trailer update as normal and synchronizes it between all players."}),"\n",(0,t.jsx)(i.p,{children:"It is always called first in filterscripts."}),"\n",(0,t.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-c",children:"public OnTrailerUpdate(playerid, vehicleid)\n{\n    DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));\n    return 0;\n}\n"})}),"\n",(0,t.jsx)(i.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsx)(i.admonition,{type:"warning",children:(0,t.jsx)(i.p,{children:"This callback is called very frequently per second per trailer. You should refrain from implementing intensive calculations or intensive file writing/reading operations in this callback."})}),"\n",(0,t.jsx)(i.h2,{id:"related-functions",children:"Related Functions"}),"\n",(0,t.jsx)(i.p,{children:"The following callbacks might be useful, as they're related to this callback in one way or another."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"OnUnoccupiedVehicleUpdate",children:"OnUnoccupiedVehicleUpdate"}),": This callback is called when a driver-less vehicle's position is synced by a client."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"related-functions-1",children:"Related Functions"}),"\n",(0,t.jsx)(i.p,{children:"The following functions might be useful, as they're related to this callback in one way or another."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../functions/GetVehicleTrailer",children:"GetVehicleTrailer"}),": Check what trailer a vehicle is pulling."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../functions/IsTrailerAttachedToVehicle",children:"IsTrailerAttachedToVehicle"}),": Check if a trailer is attached to a vehicle."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../functions/AttachTrailerToVehicle",children:"AttachTrailerToVehicle"}),": Attach a trailer to a vehicle."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"../functions/DetachTrailerFromVehicle",children:"DetachTrailerFromVehicle"}),": Detach a trailer from a vehicle."]}),"\n"]})]})}function o(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);