"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[53431],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(96540);const c={},a=r.createContext(c);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},45783:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"scripting/callbacks/OnPlayerDisconnect","title":"OnPlayerDisconnect","description":"Cette callback est appel\xe9e quand un joueur se d\xe9connecte du serveur.","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/scripting/callbacks/OnPlayerDisconnect.md","sourceDirName":"scripting/callbacks","slug":"/scripting/callbacks/OnPlayerDisconnect","permalink":"/fr/docs/scripting/callbacks/OnPlayerDisconnect","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/callbacks/OnPlayerDisconnect.md","tags":[{"inline":true,"label":"player","permalink":"/fr/docs/tags/player"}],"version":"current","frontMatter":{"title":"OnPlayerDisconnect","sidebar_label":"OnPlayerDisconnect","description":"Cette callback est appel\xe9e quand un joueur se d\xe9connecte du serveur.","tags":["player"]},"sidebar":"docsSidebar","previous":{"title":"OnPlayerDeath","permalink":"/fr/docs/scripting/callbacks/OnPlayerDeath"},"next":{"title":"OnPlayerEditAttachedObject","permalink":"/fr/docs/scripting/callbacks/OnPlayerEditAttachedObject"}}');var c=t(74848),a=t(28453);const s={title:"OnPlayerDisconnect",sidebar_label:"OnPlayerDisconnect",description:"Cette callback est appel\xe9e quand un joueur se d\xe9connecte du serveur.",tags:["player"]},l=void 0,i={},o=[{value:"Param\xe8tres",id:"param\xe8tres",level:2},{value:"Valeur de retour",id:"valeur-de-retour",level:2},{value:"Exemple",id:"exemple",level:2},{value:"Astuces",id:"astuces",level:2},{value:"Callback connexe",id:"callback-connexe",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"param\xe8tres",children:"Param\xe8tres"}),"\n",(0,c.jsx)(n.p,{children:"Cette callback est appel\xe9e quand un joueur se d\xe9connecte du serveur."}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Nom"}),(0,c.jsx)(n.th,{children:"Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsxs)(n.td,{children:[(0,c.jsx)(n.code,{children:"int"})," playerid"]}),(0,c.jsx)(n.td,{children:"ID du joueur qui se d\xe9connecte"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsxs)(n.td,{children:[(0,c.jsx)(n.code,{children:"int"})," reason"]}),(0,c.jsx)(n.td,{children:"Raison de la d\xe9connexion _(v. tableau, infra)"})]})]})]}),"\n",(0,c.jsx)(n.h2,{id:"valeur-de-retour",children:"Valeur de retour"}),"\n",(0,c.jsxs)(n.p,{children:["Cette callback ne retourne rien, mais doit retourner quelque chose. Autrement dit, ",(0,c.jsx)(n.code,{children:"return callback();"})," ne fonctionnera pas car la callback ne retourne rien, mais un return ",(0,c.jsxs)(n.em,{children:["(",(0,c.jsx)(n.code,{children:"return 1;"})," ou ",(0,c.jsx)(n.code,{children:"return 0;"}),")"]})," doit \xeatre effectu\xe9 dans la callback."]}),"\n",(0,c.jsx)(n.h2,{id:"exemple",children:"Exemple"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-c",children:'public OnPlayerDisconnect(playerid, reason)\n{\n    new\n        szString[64],\n        playerName[MAX_PLAYER_NAME];\n\n    GetPlayerName(playerid, playerName, MAX_PLAYER_NAME);\n\n    new szDisconnectReason[3][] =\n    {\n        "Timeout/Crash",\n        "(/q)uitter",\n        "Kick/Ban"\n    };\n\n    format(szString, sizeof szString, "[-] %s a quitt\xe9 le serveur (%s).", playerName, szDisconnectReason[reason]);\n\n    SendClientMessageToAll(0xC4C4C4FF, szString);\n    return 1;\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"astuces",children:"Astuces"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"Certaines fonctions peuvent ne pas fonctionner correctement quand cette callback est utilis\xe9e et que le joueur est d\xe9j\xe0 d\xe9connect\xe9. Cela signifie que vous ne pouvez pas avoir des informations sur celui-ci, par exemple avec GetPlayerIp et GetPlayerPos."})}),"\n",(0,c.jsx)(n.h2,{id:"callback-connexe",children:"Callback connexe"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.a,{href:"OnPlayerConnect",children:"OnPlayerConnect"})," : Quand le joueur se connecte au serveur."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);