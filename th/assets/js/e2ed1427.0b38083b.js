"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[51327],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(96540);const s={},d=i.createContext(s);function l(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(d.Provider,{value:n},e.children)}},71144:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"scripting/functions/db_close","title":"db_close","description":"Closes an SQLite database that was opened with db_open.","source":"@site/i18n/th/docusaurus-plugin-content-docs/current/scripting/functions/db_close.md","sourceDirName":"scripting/functions","slug":"/scripting/functions/db_close","permalink":"/th/docs/scripting/functions/db_close","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/functions/db_close.md","tags":[{"inline":true,"label":"sqlite","permalink":"/th/docs/tags/sqlite"}],"version":"current","frontMatter":{"title":"db_close","sidebar_label":"db_close","description":"Closes an SQLite database that was opened with db_open.","tags":["sqlite"]},"sidebar":"docsSidebar","previous":{"title":"clamp","permalink":"/th/docs/scripting/functions/clamp"},"next":{"title":"db_debug_openfiles","permalink":"/th/docs/scripting/functions/db_debug_openfiles"}}');var s=t(74848),d=t(28453);const l={title:"db_close",sidebar_label:"db_close",description:"Closes an SQLite database that was opened with db_open.",tags:["sqlite"]},o=void 0,r={},a=[{value:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",id:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",level:2},{value:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19",id:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19",level:2},{value:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07",id:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07",level:2},{value:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01",id:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01",level:2},{value:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19",id:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19",level:2}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"This function starts with lowercase letter."})}),"\n",(0,s.jsx)(n.h2,{id:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",children:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22"}),"\n",(0,s.jsx)(n.p,{children:"Closes an SQLite database that was opened with db_open."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["DB",":db"]}),(0,s.jsx)(n.td,{children:"The handle of the database connection to close (returned by db_open)."})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19",children:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19"}),"\n",(0,s.jsx)(n.p,{children:"1: The function executed successfully."}),"\n",(0,s.jsx)(n.p,{children:"0: The function failed to execute. May mean that the database handle specified is not open."}),"\n",(0,s.jsx)(n.h2,{id:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07",children:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:'new DB:db_handle;\n// ...\npublic OnGameModeInit()\n{\n    // Create a connection to the database\n    if ((db_handle = db_open("example.db")) == DB:0)\n    {\n        // Error\n        print("Failed to open a connection to \\"example.db\\".");\n        SendRconCommand("exit");\n    }\n    else\n    {\n        // Success\n        print("Successfully created a connection to \\"example.db\\".");\n    }\n    // ...\n    return 1;\n}\n\npublic OnGameModeExit()\n{\n    // Close the connection to the database\n    db_close(db_handle);\n    // ...\n    return 1;\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01",children:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Using an invalid handle will crash your server! Get a valid handle by using db_open. But it's protected against NULL references."})}),"\n",(0,s.jsx)(n.h2,{id:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19",children:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"db_open: Open a connection to an SQLite database"}),"\n",(0,s.jsx)(n.li,{children:"db_close: Close the connection to an SQLite database"}),"\n",(0,s.jsx)(n.li,{children:"db_query: Query an SQLite database"}),"\n",(0,s.jsx)(n.li,{children:"db_free_result: Free result memory from a db_query"}),"\n",(0,s.jsx)(n.li,{children:"db_num_rows: Get the number of rows in a result"}),"\n",(0,s.jsx)(n.li,{children:"db_next_row: Move to the next row"}),"\n",(0,s.jsx)(n.li,{children:"db_num_fields: Get the number of fields in a result"}),"\n",(0,s.jsx)(n.li,{children:"db_field_name: Returns the name of a field at a particular index"}),"\n",(0,s.jsx)(n.li,{children:"db_get_field: Get content of field with specified ID from current result row"}),"\n",(0,s.jsx)(n.li,{children:"db_get_field_assoc: Get content of field with specified name from current result row"}),"\n",(0,s.jsx)(n.li,{children:"db_get_field_int: Get content of field as an integer with specified ID from current result row"}),"\n",(0,s.jsx)(n.li,{children:"db_get_field_assoc_int: Get content of field as an integer with specified name from current result row"}),"\n",(0,s.jsx)(n.li,{children:"db_get_field_float: Get content of field as a float with specified ID from current result row"}),"\n",(0,s.jsx)(n.li,{children:"db_get_field_assoc_float: Get content of field as a float with specified name from current result row"}),"\n",(0,s.jsx)(n.li,{children:"db_get_mem_handle: Get memory handle for an SQLite database that was opened with db_open."}),"\n",(0,s.jsx)(n.li,{children:"db_get_result_mem_handle: Get memory handle for an SQLite query that was executed with db_query."}),"\n",(0,s.jsx)(n.li,{children:"db_debug_openfiles"}),"\n",(0,s.jsx)(n.li,{children:"db_debug_openresults"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);