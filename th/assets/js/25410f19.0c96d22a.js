"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[66297],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}},42480:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"scripting/functions/fblockread","title":"fblockread","description":"This function allows you to read data from a file, without encoding and line terminators.","source":"@site/i18n/th/docusaurus-plugin-content-docs/current/scripting/functions/fblockread.md","sourceDirName":"scripting/functions","slug":"/scripting/functions/fblockread","permalink":"/th/docs/scripting/functions/fblockread","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/functions/fblockread.md","tags":[],"version":"current","frontMatter":{"title":"fblockread","sidebar_label":"fblockread","description":"This function allows you to read data from a file, without encoding and line terminators.","tags":[]},"sidebar":"docsSidebar","previous":{"title":"fattrib","permalink":"/th/docs/scripting/functions/fattrib"},"next":{"title":"fblockwrite","permalink":"/th/docs/scripting/functions/fblockwrite"}}');var r=t(74848),o=t(28453);const l={title:"fblockread",sidebar_label:"fblockread",description:"This function allows you to read data from a file, without encoding and line terminators.",tags:[]},s=void 0,a={},d=[{value:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",id:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",level:2},{value:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19",id:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19",level:2},{value:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07",id:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07",level:2},{value:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01",id:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01",level:2},{value:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19",id:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19",level:2}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This function starts with lowercase letter."})}),"\n",(0,r.jsx)(n.h2,{id:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22",children:"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22"}),"\n",(0,r.jsx)(n.p,{children:"This function allows you to read data from a file, without encoding and line terminators"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"handle"}),(0,r.jsx)(n.td,{children:"File handle to use, opened by fopen()"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"buffer"}),(0,r.jsx)(n.td,{children:"The buffer to save the read data in."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"size = sizeof buffer"}),(0,r.jsx)(n.td,{children:"The number of cells to read."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19",children:"\u0e2a\u0e48\u0e07\u0e04\u0e37\u0e19"}),"\n",(0,r.jsx)(n.p,{children:"The number of cells read. Zero, if the file end has been reached."}),"\n",(0,r.jsx)(n.h2,{id:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07",children:"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Define "some_enum"\nenum _:some_enum\n{\n    some_data1,\n    some_data2[20],\n    Float:some_data3\n}\n\n// Declare "some_data"\nnew some_data[some_enum];\n\n// ...\n\n// Open "file.bin" in "read only" mode\nnew File:handle = fopen("file.bin", io_write)\n\n    // Declare "file_len"\n    file_len;\n\n// Check, if "file.bin" is open\nif (handle)\n{\n    // Success\n\n    // Get the file length of "file.bin"\n    file_len = flength(handle);\n\n    // If file is equally large than the array\n    if (file_len == (some_enum*4))\n    {\n        // Success\n\n        // Read from "file.bin" into "some_data"\n        fblockread(handle, some_data);\n    }\n    else\n    {\n        // Error\n        print("\\"file.bin\\" is not compatible with the array.");\n    }\n\n    // Close "file.bin"\n    fclose(handle);\n}\nelse\n{\n    // Error\n    print("Failed to open \\"file.bin\\".");\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01",children:"\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"Using an invalid handle will crash your server! Get a valid handle by using fopen or ftemp."})}),"\n",(0,r.jsx)(n.h2,{id:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19",children:"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19"})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);