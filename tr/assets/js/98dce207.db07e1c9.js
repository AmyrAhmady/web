"use strict";(self.webpackChunkomp_web=self.webpackChunkomp_web||[]).push([[14633],{28453:(e,i,a)=>{a.d(i,{R:()=>d,x:()=>s});var n=a(96540);const r={},l=n.createContext(r);function d(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(l.Provider,{value:i},e.children)}},34321:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>t,contentTitle:()=>s,default:()=>c,frontMatter:()=>d,metadata:()=>n,toc:()=>k});const n=JSON.parse('{"id":"scripting/language/reference/Pitfalls-differences-from-C","title":"Tuza\u011fa D\xfc\u015fme: C\'den Farklar","description":"---","source":"@site/i18n/tr/docusaurus-plugin-content-docs/current/scripting/language/reference/11-Pitfalls-differences-from-C.md","sourceDirName":"scripting/language/reference","slug":"/scripting/language/reference/Pitfalls-differences-from-C","permalink":"/tr/docs/scripting/language/reference/Pitfalls-differences-from-C","draft":false,"unlisted":false,"editUrl":"https://github.com/openmultiplayer/web/tree/master/frontend/docs/scripting/language/reference/11-Pitfalls-differences-from-C.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Proposed-function-library","permalink":"/tr/docs/scripting/language/reference/Proposed-function-library"},"next":{"title":"Assorted-tips","permalink":"/tr/docs/scripting/language/reference/Assorted-tips"}}');var r=a(74848),l=a(28453);const d={},s="Tuza\u011fa D\xfc\u015fme: C'den Farklar",t={},k=[];function o(e){const i={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"tuza\u011fa-d\xfc\u015fme-cden-farklar",children:"Tuza\u011fa D\xfc\u015fme: C'den Farklar"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"PAWN, C'nin tip mekanizmas\u0131na sahip de\u011fildir. PAWN, C'nin \"sadece tamsay\u0131\" t\xfcr\xfcnden bir \xe7e\u015fittir; yap\u0131lar veya birlikler yoktur ve kayan nokta deste\u011fi, kullan\u0131c\u0131 tan\u0131ml\u0131 operat\xf6rler ve yerel i\u015flevlerin yard\u0131m\u0131yla uygulanmal\u0131d\u0131r."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'Rasyonel say\u0131lar i\xe7in kabul edilen s\xf6zdizimi, C\'deki kayan nokta de\u011ferlerinden daha kat\u0131d\u0131r. C\'de ".5" ve "6." gibi de\u011ferler kabul edilebilirken, PAWN\'da s\u0131ras\u0131yla "0.5" ve "6.0" yazmak gerekir. C\'de ondal\u0131k noktas\u0131 iste\u011fe ba\u011fl\u0131d\u0131r, bu nedenle "2E8" yazabilirsiniz; ancak PAWN b\xfcy\xfck harf "E"yi kabul etmez (k\xfc\xe7\xfck harf "e" kullan\u0131n) ve ondal\u0131k noktay\u0131 gerektirir: \xf6rne\u011fin "2.0e8". Daha fazla bilgi i\xe7in sayfa 98\'e bak\u0131n.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'PAWN, "i\u015faret\xe7ileri" sa\u011flamaz. Fonksiyon arg\xfcmanlar\u0131n\u0131 referansla iletmek i\xe7in PAWN, bir "referans" arg\xfcman\u0131 sa\u011flar (sayfa 71). "Placeholder" arg\xfcman\u0131, NULL i\u015faret\xe7isinin baz\u0131 kullan\u0131mlar\u0131n\u0131 (sayfa 75) yerine getirir.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'Say\u0131lar onalt\u0131l\u0131k, ondal\u0131k veya ikili say\u0131 taban\u0131na sahip olabilir. Sekizli taban desteklenmez. "Sabitler" b\xf6l\xfcm\xfcne bak\u0131n. Onalt\u0131l\u0131k say\u0131lar "0x" (k\xfc\xe7\xfck harf "x") ile ba\u015flamal\u0131d\u0131r, "0X" \xf6neki ge\xe7ersizdir.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'Ka\xe7\u0131\u015f dizileri ("\\n", "\\t", vb.) ayn\u0131d\u0131r, ancak "ddd" \xfc\xe7 ondal\u0131k basamaklar\u0131 temsil etti\u011finden C/C++\'dan farkl\u0131 olarak "\\ddd" i\xe7in. Ters e\u011fik \xe7izgi ("") ba\u015fka bir sembolle de\u011fi\u015ftirilebilir; sayfa 120\'deki #pragma ctrlchar\'a bak\u0131n - \xf6nceki PAWN s\xfcr\xfcmleri \xf6zellikle ka\xe7\u0131\u015f karakteri olarak caret ("^") kullanm\u0131\u015ft\u0131r.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'Bir switch ifadesindeki durumlar "d\xfc\u015fmez". Her durum etiketinden sonra yaln\u0131zca tek bir talimat olabilir ve olmal\u0131d\u0131r. Birden fazla talimat\u0131 y\xfcr\xfctmek i\xe7in bir bile\u015fik ifade kullanmal\u0131s\u0131n\u0131z. Bir switch ifadesinin varsay\u0131lan k\u0131sm\u0131 switch ifadesinin en son k\u0131sm\u0131 olmal\u0131d\u0131r. Daha fazla bilgi i\xe7in sayfa 115\'e bak\u0131n. C/C++\'da switch, Fortran\'\u0131n hesaplanm\u0131\u015f etiketlerine benzeyen bir "ko\u015fullu goto"dur. PAWN\'da switch, yap\u0131land\u0131r\u0131lm\u0131\u015f bir "if"tir.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Bir break ifadesi sadece d\xf6ng\xfclerden \xe7\u0131kar. C/C++'da break ifadesi ayn\u0131 zamanda switch ifadesinde bir durumu sona erdirir. PAWN'da switch ifadeleri farkl\u0131 bir \u015fekilde uygulanm\u0131\u015ft\u0131r (sayfa 115'e bak\u0131n)."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:['PAWN, "dizi atamas\u0131n\u0131" destekler, ancak her iki dizinin de ayn\u0131 boyutta olmas\u0131 \u015fart\u0131yla. \xd6rne\u011fin, "a" ve "b" her ikisi de 6 h\xfccreli dizilerse, "a = b" ifadesi ge\xe7erlidir. PAWN, harf dizelerinin yan\u0131 s\u0131ra harf dizilerini de destekler, bu da "a = ',5,'" ifadesine izin verir (burada "a" 6 elemanl\u0131 bir dizi de\u011fi\u015fkenidir).']}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"char"})," bir t\xfcr de\u011fil, bir operat\xf6rd\xfcr. Detaylar i\xe7in 110. sayfaya ve 137. sayfadaki ipu\xe7lar\u0131na bak\u0131n\u0131z."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"defined"})," bir \xf6n i\u015flemci direktifi de\u011fil, bir operat\xf6rd\xfcr. PAWN'daki ",(0,r.jsx)(i.code,{children:"defined"})," operat\xf6r\xfc sabitler (const ve enum ile), global de\u011fi\u015fkenler, yerel de\u011fi\u015fkenler ve fonksiyonlar \xfczerinde \xe7al\u0131\u015f\u0131r."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"sizeof"}),' operat\xf6r\xfc bir de\u011fi\u015fkenin boyutunu "elemanlar" cinsinden, "bayt" cinsinden de\u011fil, d\xf6nd\xfcr\xfcr. Bir eleman bir h\xfccre veya alt dizi olabilir. Detaylar i\xe7in 109. sayfaya bak\u0131n\u0131z.']}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Bo\u015f talimat bir noktal\u0131 virg\xfcl de\u011fil, bo\u015f bir bile\u015fik bloktur (112. sayfa). Bu de\u011fi\u015fiklik s\u0131k\xe7a yap\u0131lan bir hatay\u0131 \xf6nler."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Derleyici direktifleri C'nin \xf6n i\u015flemci komutlar\u0131ndan farkl\u0131d\u0131r. \xd6zellikle, #define direktifi C/C\u207a\u207a'nininkiyle uyumsuzdur ve #ifdef ve #ifndef daha genel #if direktifi ile de\u011fi\u015ftirilir (117. sayfadaki \"Directives\" b\xf6l\xfcm\xfcne bak\u0131n\u0131z). Say\u0131sal sabitler olu\u015fturmak i\xe7in ayr\u0131ca 101. sayfaya; dize sabitleri olu\u015fturmak i\xe7in 93. sayfaya bak\u0131n\u0131z."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Metin yerine koymalar\u0131 (\xf6n i\u015flemci makrolar\u0131; #define direktifine bak\u0131n\u0131z) sat\u0131rlar aras\u0131nda e\u015fle\u015fmez. Yani, e\u015fle\u015fmesini ve de\u011fi\u015ftirmesini istedi\u011finiz metin bir #define makrosu ile ayn\u0131 sat\u0131rda g\xf6r\xfcnmelidir. #define makrosunun tan\u0131m\u0131 da ayn\u0131 \u015fekilde tek bir sat\u0131rda olmal\u0131d\u0131r."}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'"/" operat\xf6r\xfc i\xe7in kesme y\xf6nlendirmesi her zaman daha k\xfc\xe7\xfck de\u011fere do\u011frudur, -2 -1\'den daha k\xfc\xe7\xfck oldu\u011fundan. "%" operat\xf6r\xfc her zaman i\u015flemlerin i\u015faretlerine bak\u0131lmaks\u0131z\u0131n pozitif bir sonu\xe7 verir. Detaylar i\xe7in 104. sayfaya bak\u0131n\u0131z.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'Unary "+" operat\xf6r\xfc yoktur, zaten "i\u015flem yok" operat\xf6r\xfcd\xfcr.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'\xdc\xe7 bit d\xfczeyindeki operat\xf6r\xfcn \xf6nceli\u011fi C\'den farkl\u0131d\u0131r. "&", "^" ve | operat\xf6rlerinin \xf6ncelik d\xfczeyi, ili\u015fkisel operat\xf6rlerden daha y\xfcksektir (Dennis Ritchie, bu operat\xf6rlerin C\'de d\xfc\u015f\xfck \xf6ncelik d\xfczeyine sahip olmas\u0131n\u0131n nedenini, erken C derleyicilerinin hen\xfcz mant\u0131ksal "&&" ve || operat\xf6rlerine sahip olmamas\u0131ndan dolay\u0131, bitwise "&" ve | operat\xf6rlerinin bunlar\u0131n yerine kullan\u0131ld\u0131\u011f\u0131ndan a\xe7\u0131klam\u0131\u015ft\u0131r).'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:'"extern" anahtar kelimesi PAWN\'da mevcut de\u011fildir; mevcut derleyici uygulamas\u0131nda bir "ba\u011flant\u0131 a\u015famas\u0131" yoktur. Bir program\u0131 birka\xe7 kaynak dosyas\u0131ndan olu\u015fturmak i\xe7in t\xfcm kaynak dosyalar\u0131n\u0131 derleyici komut sat\u0131r\u0131na ekleyin veya di\u011fer t\xfcm kaynak dosyalar\u0131n\u0131 "include" eden bir ana proje beti\u011fi dosyas\u0131 olu\u015fturun. PAWN derleyicisi kullan\u0131lmayan fonksiyonlar\u0131 ve global de\u011fi\u015fkenleri optimize edebilir. Ayr\u0131nt\u0131lar i\xe7in 63. ve 84. sayfalara bak\u0131n\u0131z.'}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"\xc7o\u011fu durumda, fonksiyonlar\u0131n (yani prototiplerin) ileriye d\xf6n\xfck bildirimleri gerekli de\u011fildir. PAWN, iki ge\xe7i\u015fli bir derleyicidir, ilk ge\xe7i\u015fte t\xfcm fonksiyonlar\u0131 g\xf6recek ve ikinci ge\xe7i\u015fte bunlar\u0131 kullanacakt\u0131r. Ancak, kullan\u0131c\u0131 tan\u0131ml\u0131 operat\xf6rler kullan\u0131lmadan \xf6nce bildirilmelidir."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:'E\u011fer sa\u011flan\u0131rsa, ileriye d\xf6n\xfck bildirimler fonksiyon tan\u0131m\u0131 ile tam olarak e\u015fle\u015fmelidir; parametre isimleri prototip veya tan\u0131m aras\u0131nda eksik olmamal\u0131 veya farkl\u0131 olmamal\u0131d\u0131r. PAWN, prototiplerde parametre isimlerini \xf6nemser \xe7\xfcnk\xfc "isimli parametreler" \xf6zelli\u011fi bulunmaktad\u0131r. Prototipleri kullanarak ileriye d\xf6n\xfck bildirilen fonksiyonlar\u0131 \xe7a\u011f\u0131rmak gerekir. Bu isimli parametrelerle yap\u0131l\u0131yorsa, derleyicinin parametre isimlerini (ve bunlar\u0131n parametre listesindeki konumlar\u0131n\u0131) zaten bilmelidir. Sonu\xe7 olarak, bir prototipin parametre isimleri tan\u0131mla e\u015fit olmal\u0131d\u0131r.'}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/tr/docs/scripting/language/reference/Contents",children:"\u0130\xe7erik listesine geri d\xf6n"})})]})}function c(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);